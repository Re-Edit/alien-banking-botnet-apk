package com.jcraft.jsch;

import android.support.v4.view.InputDeviceCompat;
import java.io.PrintStream;

public class DHG14 extends KeyExchange {
    private static final int SSH_MSG_KEXDH_INIT = 30;
    private static final int SSH_MSG_KEXDH_REPLY = 31;
    static final byte[] g = {2};
    static final byte[] p;
    byte[] I_C;
    byte[] I_S;
    byte[] V_C;
    byte[] V_S;
    private Buffer buf;
    DH dh;
    byte[] e;
    private Packet packet;
    private int state;

    static {
        byte[] bArr = new byte[InputDeviceCompat.SOURCE_KEYBOARD];
        // fill-array-data instruction
        bArr[0] = 0;
        bArr[1] = -1;
        bArr[2] = -1;
        bArr[3] = -1;
        bArr[4] = -1;
        bArr[5] = -1;
        bArr[6] = -1;
        bArr[7] = -1;
        bArr[8] = -1;
        bArr[9] = -55;
        bArr[10] = 15;
        bArr[11] = -38;
        bArr[12] = -94;
        bArr[13] = 33;
        bArr[14] = 104;
        bArr[15] = -62;
        bArr[16] = 52;
        bArr[17] = -60;
        bArr[18] = -58;
        bArr[19] = 98;
        bArr[20] = -117;
        bArr[21] = -128;
        bArr[22] = -36;
        bArr[23] = 28;
        bArr[24] = -47;
        bArr[25] = 41;
        bArr[26] = 2;
        bArr[27] = 78;
        bArr[28] = 8;
        bArr[29] = -118;
        bArr[30] = 103;
        bArr[31] = -52;
        bArr[32] = 116;
        bArr[33] = 2;
        bArr[34] = 11;
        bArr[35] = -66;
        bArr[36] = -90;
        bArr[37] = 59;
        bArr[38] = 19;
        bArr[39] = -101;
        bArr[40] = 34;
        bArr[41] = 81;
        bArr[42] = 74;
        bArr[43] = 8;
        bArr[44] = 121;
        bArr[45] = -114;
        bArr[46] = 52;
        bArr[47] = 4;
        bArr[48] = -35;
        bArr[49] = -17;
        bArr[50] = -107;
        bArr[51] = 25;
        bArr[52] = -77;
        bArr[53] = -51;
        bArr[54] = 58;
        bArr[55] = 67;
        bArr[56] = 27;
        bArr[57] = 48;
        bArr[58] = 43;
        bArr[59] = 10;
        bArr[60] = 109;
        bArr[61] = -14;
        bArr[62] = 95;
        bArr[63] = 20;
        bArr[64] = 55;
        bArr[65] = 79;
        bArr[66] = -31;
        bArr[67] = 53;
        bArr[68] = 109;
        bArr[69] = 109;
        bArr[70] = 81;
        bArr[71] = -62;
        bArr[72] = 69;
        bArr[73] = -28;
        bArr[74] = -123;
        bArr[75] = -75;
        bArr[76] = 118;
        bArr[77] = 98;
        bArr[78] = 94;
        bArr[79] = 126;
        bArr[80] = -58;
        bArr[81] = -12;
        bArr[82] = 76;
        bArr[83] = 66;
        bArr[84] = -23;
        bArr[85] = -90;
        bArr[86] = 55;
        bArr[87] = -19;
        bArr[88] = 107;
        bArr[89] = 11;
        bArr[90] = -1;
        bArr[91] = 92;
        bArr[92] = -74;
        bArr[93] = -12;
        bArr[94] = 6;
        bArr[95] = -73;
        bArr[96] = -19;
        bArr[97] = -18;
        bArr[98] = 56;
        bArr[99] = 107;
        bArr[100] = -5;
        bArr[101] = 90;
        bArr[102] = -119;
        bArr[103] = -97;
        bArr[104] = -91;
        bArr[105] = -82;
        bArr[106] = -97;
        bArr[107] = 36;
        bArr[108] = 17;
        bArr[109] = 124;
        bArr[110] = 75;
        bArr[111] = 31;
        bArr[112] = -26;
        bArr[113] = 73;
        bArr[114] = 40;
        bArr[115] = 102;
        bArr[116] = 81;
        bArr[117] = -20;
        bArr[118] = -28;
        bArr[119] = 91;
        bArr[120] = 61;
        bArr[121] = -62;
        bArr[122] = 0;
        bArr[123] = 124;
        bArr[124] = -72;
        bArr[125] = -95;
        bArr[126] = 99;
        bArr[127] = -65;
        bArr[128] = 5;
        bArr[129] = -104;
        bArr[130] = -38;
        bArr[131] = 72;
        bArr[132] = 54;
        bArr[133] = 28;
        bArr[134] = 85;
        bArr[135] = -45;
        bArr[136] = -102;
        bArr[137] = 105;
        bArr[138] = 22;
        bArr[139] = 63;
        bArr[140] = -88;
        bArr[141] = -3;
        bArr[142] = 36;
        bArr[143] = -49;
        bArr[144] = 95;
        bArr[145] = -125;
        bArr[146] = 101;
        bArr[147] = 93;
        bArr[148] = 35;
        bArr[149] = -36;
        bArr[150] = -93;
        bArr[151] = -83;
        bArr[152] = -106;
        bArr[153] = 28;
        bArr[154] = 98;
        bArr[155] = -13;
        bArr[156] = 86;
        bArr[157] = 32;
        bArr[158] = -123;
        bArr[159] = 82;
        bArr[160] = -69;
        bArr[161] = -98;
        bArr[162] = -43;
        bArr[163] = 41;
        bArr[164] = 7;
        bArr[165] = 112;
        bArr[166] = -106;
        bArr[167] = -106;
        bArr[168] = 109;
        bArr[169] = 103;
        bArr[170] = 12;
        bArr[171] = 53;
        bArr[172] = 78;
        bArr[173] = 74;
        bArr[174] = -68;
        bArr[175] = -104;
        bArr[176] = 4;
        bArr[177] = -15;
        bArr[178] = 116;
        bArr[179] = 108;
        bArr[180] = 8;
        bArr[181] = -54;
        bArr[182] = 24;
        bArr[183] = 33;
        bArr[184] = 124;
        bArr[185] = 50;
        bArr[186] = -112;
        bArr[187] = 94;
        bArr[188] = 70;
        bArr[189] = 46;
        bArr[190] = 54;
        bArr[191] = -50;
        bArr[192] = 59;
        bArr[193] = -29;
        bArr[194] = -98;
        bArr[195] = 119;
        bArr[196] = 44;
        bArr[197] = 24;
        bArr[198] = 14;
        bArr[199] = -122;
        bArr[200] = 3;
        bArr[201] = -101;
        bArr[202] = 39;
        bArr[203] = -125;
        bArr[204] = -94;
        bArr[205] = -20;
        bArr[206] = 7;
        bArr[207] = -94;
        bArr[208] = -113;
        bArr[209] = -75;
        bArr[210] = -59;
        bArr[211] = 93;
        bArr[212] = -16;
        bArr[213] = 111;
        bArr[214] = 76;
        bArr[215] = 82;
        bArr[216] = -55;
        bArr[217] = -34;
        bArr[218] = 43;
        bArr[219] = -53;
        bArr[220] = -10;
        bArr[221] = -107;
        bArr[222] = 88;
        bArr[223] = 23;
        bArr[224] = 24;
        bArr[225] = 57;
        bArr[226] = -107;
        bArr[227] = 73;
        bArr[228] = 124;
        bArr[229] = -22;
        bArr[230] = -107;
        bArr[231] = 106;
        bArr[232] = -27;
        bArr[233] = 21;
        bArr[234] = -46;
        bArr[235] = 38;
        bArr[236] = 24;
        bArr[237] = -104;
        bArr[238] = -6;
        bArr[239] = 5;
        bArr[240] = 16;
        bArr[241] = 21;
        bArr[242] = 114;
        bArr[243] = -114;
        bArr[244] = 90;
        bArr[245] = -118;
        bArr[246] = -84;
        bArr[247] = -86;
        bArr[248] = 104;
        bArr[249] = -1;
        bArr[250] = -1;
        bArr[251] = -1;
        bArr[252] = -1;
        bArr[253] = -1;
        bArr[254] = -1;
        bArr[255] = -1;
        bArr[256] = -1;
        p = bArr;
    }

    public void init(Session session, byte[] bArr, byte[] bArr2, byte[] bArr3, byte[] bArr4) throws Exception {
        this.session = session;
        this.V_S = bArr;
        this.V_C = bArr2;
        this.I_S = bArr3;
        this.I_C = bArr4;
        try {
            this.sha = (HASH) Class.forName(session.getConfig("sha-1")).newInstance();
            this.sha.init();
        } catch (Exception e2) {
            System.err.println(e2);
        }
        this.buf = new Buffer();
        this.packet = new Packet(this.buf);
        try {
            this.dh = (DH) Class.forName(session.getConfig("dh")).newInstance();
            this.dh.init();
            this.dh.setP(p);
            this.dh.setG(g);
            this.e = this.dh.getE();
            this.packet.reset();
            this.buf.putByte((byte) 30);
            this.buf.putMPInt(this.e);
            if (bArr != null) {
                session.write(this.packet);
                if (JSch.getLogger().isEnabled(1)) {
                    JSch.getLogger().log(1, "SSH_MSG_KEXDH_INIT sent");
                    JSch.getLogger().log(1, "expecting SSH_MSG_KEXDH_REPLY");
                }
                this.state = SSH_MSG_KEXDH_REPLY;
            }
        } catch (Exception e3) {
            throw e3;
        }
    }

    public boolean next(Buffer buffer) throws Exception {
        if (this.state != SSH_MSG_KEXDH_REPLY) {
            return false;
        }
        buffer.getInt();
        buffer.getByte();
        int i = buffer.getByte();
        if (i != SSH_MSG_KEXDH_REPLY) {
            PrintStream printStream = System.err;
            StringBuffer stringBuffer = new StringBuffer();
            stringBuffer.append("type: must be 31 ");
            stringBuffer.append(i);
            printStream.println(stringBuffer.toString());
            return false;
        }
        this.K_S = buffer.getString();
        byte[] mPInt = buffer.getMPInt();
        byte[] string = buffer.getString();
        this.dh.setF(mPInt);
        this.dh.checkRange();
        this.K = normalize(this.dh.getK());
        this.buf.reset();
        this.buf.putString(this.V_C);
        this.buf.putString(this.V_S);
        this.buf.putString(this.I_C);
        this.buf.putString(this.I_S);
        this.buf.putString(this.K_S);
        this.buf.putMPInt(this.e);
        this.buf.putMPInt(mPInt);
        this.buf.putMPInt(this.K);
        byte[] bArr = new byte[this.buf.getLength()];
        this.buf.getByte(bArr);
        this.sha.update(bArr, 0, bArr.length);
        this.H = this.sha.digest();
        byte b = ((this.K_S[0] << 24) & -16777216) | ((this.K_S[1] << 16) & 16711680) | ((this.K_S[2] << 8) & 65280) | (this.K_S[3] & 255);
        boolean verify = verify(Util.byte2str(this.K_S, 4, b), this.K_S, 4 + b, string);
        this.state = 0;
        return verify;
    }

    public int getState() {
        return this.state;
    }
}
