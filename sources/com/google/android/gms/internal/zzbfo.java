package com.google.android.gms.internal;

import android.support.annotation.NonNull;
import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.ResultTransform;
import com.google.android.gms.common.api.TransformedResult;
import java.util.concurrent.TimeUnit;

public final class zzbfo<R extends Result> extends OptionalPendingResult<R> {
    private final zzbcq<R> zzaES;

    public zzbfo(PendingResult<R> pendingResult) {
        if (pendingResult instanceof zzbcq) {
            this.zzaES = (zzbcq) pendingResult;
            return;
        }
        throw new IllegalArgumentException("OptionalPendingResult can only wrap PendingResults generated by an API call.");
    }

    public final R await() {
        return this.zzaES.await();
    }

    public final R await(long j, TimeUnit timeUnit) {
        return this.zzaES.await(j, timeUnit);
    }

    public final void cancel() {
        this.zzaES.cancel();
    }

    public final R get() {
        if (isDone()) {
            return await(0, TimeUnit.MILLISECONDS);
        }
        throw new IllegalStateException("Result is not available. Check that isDone() returns true before calling get().");
    }

    public final boolean isCanceled() {
        return this.zzaES.isCanceled();
    }

    public final boolean isDone() {
        return this.zzaES.isReady();
    }

    public final void setResultCallback(ResultCallback<? super R> resultCallback) {
        this.zzaES.setResultCallback(resultCallback);
    }

    public final void setResultCallback(ResultCallback<? super R> resultCallback, long j, TimeUnit timeUnit) {
        this.zzaES.setResultCallback(resultCallback, j, timeUnit);
    }

    @NonNull
    public final <S extends Result> TransformedResult<S> then(@NonNull ResultTransform<? super R, ? extends S> resultTransform) {
        return this.zzaES.then(resultTransform);
    }

    public final void zza(PendingResult.zza zza) {
        this.zzaES.zza(zza);
    }

    public final Integer zzpm() {
        return this.zzaES.zzpm();
    }
}
